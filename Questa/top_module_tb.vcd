$date
	Tue Mar 26 14:20:54 2024
$end
$version
	QuestaSim Version 2023.2
$end
$timescale
	1ns
$end

$scope module top_dp_tb $end
$var reg 1 ! in_clka $end
$var reg 1 " in_clkb $end
$var reg 1 # in_restart $end
$var wire 1 $ rotation [1] $end
$var wire 1 % rotation [0] $end
$var wire 1 & curr_piece [1] $end
$var wire 1 ' curr_piece [0] $end
$var reg 2 ( in_move [1:0] $end
$var reg 3 ) state [2:0] $end
$var wire 1 * board [31] $end
$var wire 1 + board [30] $end
$var wire 1 , board [29] $end
$var wire 1 - board [28] $end
$var wire 1 . board [27] $end
$var wire 1 / board [26] $end
$var wire 1 0 board [25] $end
$var wire 1 1 board [24] $end
$var wire 1 2 board [23] $end
$var wire 1 3 board [22] $end
$var wire 1 4 board [21] $end
$var wire 1 5 board [20] $end
$var wire 1 6 board [19] $end
$var wire 1 7 board [18] $end
$var wire 1 8 board [17] $end
$var wire 1 9 board [16] $end
$var wire 1 : board [15] $end
$var wire 1 ; board [14] $end
$var wire 1 < board [13] $end
$var wire 1 = board [12] $end
$var wire 1 > board [11] $end
$var wire 1 ? board [10] $end
$var wire 1 @ board [9] $end
$var wire 1 A board [8] $end
$var wire 1 B board [7] $end
$var wire 1 C board [6] $end
$var wire 1 D board [5] $end
$var wire 1 E board [4] $end
$var wire 1 F board [3] $end
$var wire 1 G board [2] $end
$var wire 1 H board [1] $end
$var wire 1 I board [0] $end
$var wire 1 J location [4] $end
$var wire 1 K location [3] $end
$var wire 1 L location [2] $end
$var wire 1 M location [1] $end
$var wire 1 N location [0] $end
$var wire 1 O touched $end
$var wire 1 P error $end

$scope module dp_foo $end
$var parameter 3 Q GEN $end
$var parameter 3 R MOVE $end
$var parameter 3 S LAND $end
$var parameter 3 T CLEAR $end
$var parameter 3 U NEWBOARD $end
$var parameter 3 V GAMEOVER $end
$var wire 1 W clka $end
$var wire 1 X clkb $end
$var wire 1 Y restart $end
$var wire 1 & curr_piece_in [1] $end
$var wire 1 ' curr_piece_in [0] $end
$var wire 1 $ rotation_in [1] $end
$var wire 1 % rotation_in [0] $end
$var wire 1 Z move [1] $end
$var wire 1 [ move [0] $end
$var wire 1 * board_in [31] $end
$var wire 1 + board_in [30] $end
$var wire 1 , board_in [29] $end
$var wire 1 - board_in [28] $end
$var wire 1 . board_in [27] $end
$var wire 1 / board_in [26] $end
$var wire 1 0 board_in [25] $end
$var wire 1 1 board_in [24] $end
$var wire 1 2 board_in [23] $end
$var wire 1 3 board_in [22] $end
$var wire 1 4 board_in [21] $end
$var wire 1 5 board_in [20] $end
$var wire 1 6 board_in [19] $end
$var wire 1 7 board_in [18] $end
$var wire 1 8 board_in [17] $end
$var wire 1 9 board_in [16] $end
$var wire 1 : board_in [15] $end
$var wire 1 ; board_in [14] $end
$var wire 1 < board_in [13] $end
$var wire 1 = board_in [12] $end
$var wire 1 > board_in [11] $end
$var wire 1 ? board_in [10] $end
$var wire 1 @ board_in [9] $end
$var wire 1 A board_in [8] $end
$var wire 1 B board_in [7] $end
$var wire 1 C board_in [6] $end
$var wire 1 D board_in [5] $end
$var wire 1 E board_in [4] $end
$var wire 1 F board_in [3] $end
$var wire 1 G board_in [2] $end
$var wire 1 H board_in [1] $end
$var wire 1 I board_in [0] $end
$var wire 1 \ state [2] $end
$var wire 1 ] state [1] $end
$var wire 1 ^ state [0] $end
$var wire 1 J location_in [4] $end
$var wire 1 K location_in [3] $end
$var wire 1 L location_in [2] $end
$var wire 1 M location_in [1] $end
$var wire 1 N location_in [0] $end
$var wire 1 O touched $end
$var wire 1 P error_out $end
$var wire 1 $ rotation_out [1] $end
$var wire 1 % rotation_out [0] $end
$var wire 1 & curr_piece_out [1] $end
$var wire 1 ' curr_piece_out [0] $end
$var wire 1 J location_out [4] $end
$var wire 1 K location_out [3] $end
$var wire 1 L location_out [2] $end
$var wire 1 M location_out [1] $end
$var wire 1 N location_out [0] $end
$var wire 1 * board_out [31] $end
$var wire 1 + board_out [30] $end
$var wire 1 , board_out [29] $end
$var wire 1 - board_out [28] $end
$var wire 1 . board_out [27] $end
$var wire 1 / board_out [26] $end
$var wire 1 0 board_out [25] $end
$var wire 1 1 board_out [24] $end
$var wire 1 2 board_out [23] $end
$var wire 1 3 board_out [22] $end
$var wire 1 4 board_out [21] $end
$var wire 1 5 board_out [20] $end
$var wire 1 6 board_out [19] $end
$var wire 1 7 board_out [18] $end
$var wire 1 8 board_out [17] $end
$var wire 1 9 board_out [16] $end
$var wire 1 : board_out [15] $end
$var wire 1 ; board_out [14] $end
$var wire 1 < board_out [13] $end
$var wire 1 = board_out [12] $end
$var wire 1 > board_out [11] $end
$var wire 1 ? board_out [10] $end
$var wire 1 @ board_out [9] $end
$var wire 1 A board_out [8] $end
$var wire 1 B board_out [7] $end
$var wire 1 C board_out [6] $end
$var wire 1 D board_out [5] $end
$var wire 1 E board_out [4] $end
$var wire 1 F board_out [3] $end
$var wire 1 G board_out [2] $end
$var wire 1 H board_out [1] $end
$var wire 1 I board_out [0] $end
$var wire 1 _ left $end
$var wire 1 ` right $end
$var wire 1 a rotate $end
$var wire 1 b piece_selection [1] $end
$var wire 1 c piece_selection [0] $end
$var wire 1 d temp_piece [1] $end
$var wire 1 e temp_piece [0] $end
$var wire 1 f temp_board_1 [31] $end
$var wire 1 g temp_board_1 [30] $end
$var wire 1 h temp_board_1 [29] $end
$var wire 1 i temp_board_1 [28] $end
$var wire 1 j temp_board_1 [27] $end
$var wire 1 k temp_board_1 [26] $end
$var wire 1 l temp_board_1 [25] $end
$var wire 1 m temp_board_1 [24] $end
$var wire 1 n temp_board_1 [23] $end
$var wire 1 o temp_board_1 [22] $end
$var wire 1 p temp_board_1 [21] $end
$var wire 1 q temp_board_1 [20] $end
$var wire 1 r temp_board_1 [19] $end
$var wire 1 s temp_board_1 [18] $end
$var wire 1 t temp_board_1 [17] $end
$var wire 1 u temp_board_1 [16] $end
$var wire 1 v temp_board_1 [15] $end
$var wire 1 w temp_board_1 [14] $end
$var wire 1 x temp_board_1 [13] $end
$var wire 1 y temp_board_1 [12] $end
$var wire 1 z temp_board_1 [11] $end
$var wire 1 { temp_board_1 [10] $end
$var wire 1 | temp_board_1 [9] $end
$var wire 1 } temp_board_1 [8] $end
$var wire 1 ~ temp_board_1 [7] $end
$var wire 1 !! temp_board_1 [6] $end
$var wire 1 "! temp_board_1 [5] $end
$var wire 1 #! temp_board_1 [4] $end
$var wire 1 $! temp_board_1 [3] $end
$var wire 1 %! temp_board_1 [2] $end
$var wire 1 &! temp_board_1 [1] $end
$var wire 1 '! temp_board_1 [0] $end
$var wire 1 (! temp_board_2 [31] $end
$var wire 1 )! temp_board_2 [30] $end
$var wire 1 *! temp_board_2 [29] $end
$var wire 1 +! temp_board_2 [28] $end
$var wire 1 ,! temp_board_2 [27] $end
$var wire 1 -! temp_board_2 [26] $end
$var wire 1 .! temp_board_2 [25] $end
$var wire 1 /! temp_board_2 [24] $end
$var wire 1 0! temp_board_2 [23] $end
$var wire 1 1! temp_board_2 [22] $end
$var wire 1 2! temp_board_2 [21] $end
$var wire 1 3! temp_board_2 [20] $end
$var wire 1 4! temp_board_2 [19] $end
$var wire 1 5! temp_board_2 [18] $end
$var wire 1 6! temp_board_2 [17] $end
$var wire 1 7! temp_board_2 [16] $end
$var wire 1 8! temp_board_2 [15] $end
$var wire 1 9! temp_board_2 [14] $end
$var wire 1 :! temp_board_2 [13] $end
$var wire 1 ;! temp_board_2 [12] $end
$var wire 1 <! temp_board_2 [11] $end
$var wire 1 =! temp_board_2 [10] $end
$var wire 1 >! temp_board_2 [9] $end
$var wire 1 ?! temp_board_2 [8] $end
$var wire 1 @! temp_board_2 [7] $end
$var wire 1 A! temp_board_2 [6] $end
$var wire 1 B! temp_board_2 [5] $end
$var wire 1 C! temp_board_2 [4] $end
$var wire 1 D! temp_board_2 [3] $end
$var wire 1 E! temp_board_2 [2] $end
$var wire 1 F! temp_board_2 [1] $end
$var wire 1 G! temp_board_2 [0] $end

$scope module myrng $end
$var wire 1 W clka $end
$var wire 1 X clkb $end
$var wire 1 Y restart $end
$var reg 2 H! random [1:0] $end
$var reg 1 I! temp_rand $end
$upscope $end

$scope module myredraw $end
$var wire 1 W clka $end
$var wire 1 X clkb $end
$var wire 1 Y restart $end
$var wire 1 * board_in [31] $end
$var wire 1 + board_in [30] $end
$var wire 1 , board_in [29] $end
$var wire 1 - board_in [28] $end
$var wire 1 . board_in [27] $end
$var wire 1 / board_in [26] $end
$var wire 1 0 board_in [25] $end
$var wire 1 1 board_in [24] $end
$var wire 1 2 board_in [23] $end
$var wire 1 3 board_in [22] $end
$var wire 1 4 board_in [21] $end
$var wire 1 5 board_in [20] $end
$var wire 1 6 board_in [19] $end
$var wire 1 7 board_in [18] $end
$var wire 1 8 board_in [17] $end
$var wire 1 9 board_in [16] $end
$var wire 1 : board_in [15] $end
$var wire 1 ; board_in [14] $end
$var wire 1 < board_in [13] $end
$var wire 1 = board_in [12] $end
$var wire 1 > board_in [11] $end
$var wire 1 ? board_in [10] $end
$var wire 1 @ board_in [9] $end
$var wire 1 A board_in [8] $end
$var wire 1 B board_in [7] $end
$var wire 1 C board_in [6] $end
$var wire 1 D board_in [5] $end
$var wire 1 E board_in [4] $end
$var wire 1 F board_in [3] $end
$var wire 1 G board_in [2] $end
$var wire 1 H board_in [1] $end
$var wire 1 I board_in [0] $end
$var wire 1 b curr_piece [1] $end
$var wire 1 c curr_piece [0] $end
$var wire 1 \ state [2] $end
$var wire 1 ] state [1] $end
$var wire 1 ^ state [0] $end
$var reg 32 J! board_out [31:0] $end
$var reg 1 K! error $end
$var reg 32 L! temp_board [31:0] $end
$var reg 1 M! temp_error $end
$upscope $end

$scope module mymove $end
$var wire 1 W clka $end
$var wire 1 X clkb $end
$var wire 1 Y restart $end
$var wire 1 _ left $end
$var wire 1 ` right $end
$var wire 1 a rotate $end
$var wire 1 J curr_piece_location [4] $end
$var wire 1 K curr_piece_location [3] $end
$var wire 1 L curr_piece_location [2] $end
$var wire 1 M curr_piece_location [1] $end
$var wire 1 N curr_piece_location [0] $end
$var wire 1 $ curr_piece_rotation [1] $end
$var wire 1 % curr_piece_rotation [0] $end
$var wire 1 & curr_piece_type [1] $end
$var wire 1 ' curr_piece_type [0] $end
$var wire 1 * curr_board_state [31] $end
$var wire 1 + curr_board_state [30] $end
$var wire 1 , curr_board_state [29] $end
$var wire 1 - curr_board_state [28] $end
$var wire 1 . curr_board_state [27] $end
$var wire 1 / curr_board_state [26] $end
$var wire 1 0 curr_board_state [25] $end
$var wire 1 1 curr_board_state [24] $end
$var wire 1 2 curr_board_state [23] $end
$var wire 1 3 curr_board_state [22] $end
$var wire 1 4 curr_board_state [21] $end
$var wire 1 5 curr_board_state [20] $end
$var wire 1 6 curr_board_state [19] $end
$var wire 1 7 curr_board_state [18] $end
$var wire 1 8 curr_board_state [17] $end
$var wire 1 9 curr_board_state [16] $end
$var wire 1 : curr_board_state [15] $end
$var wire 1 ; curr_board_state [14] $end
$var wire 1 < curr_board_state [13] $end
$var wire 1 = curr_board_state [12] $end
$var wire 1 > curr_board_state [11] $end
$var wire 1 ? curr_board_state [10] $end
$var wire 1 @ curr_board_state [9] $end
$var wire 1 A curr_board_state [8] $end
$var wire 1 B curr_board_state [7] $end
$var wire 1 C curr_board_state [6] $end
$var wire 1 D curr_board_state [5] $end
$var wire 1 E curr_board_state [4] $end
$var wire 1 F curr_board_state [3] $end
$var wire 1 G curr_board_state [2] $end
$var wire 1 H curr_board_state [1] $end
$var wire 1 I curr_board_state [0] $end
$var wire 1 \ state [2] $end
$var wire 1 ] state [1] $end
$var wire 1 ^ state [0] $end
$var reg 1 N! touched $end
$var reg 2 O! new_rotation [1:0] $end
$var reg 5 P! new_location [4:0] $end
$var reg 32 Q! new_board_state [31:0] $end
$var reg 5 R! location_temp [4:0] $end
$var reg 5 S! old_location [4:0] $end
$var reg 2 T! rotation_temp [1:0] $end
$var reg 2 U! old_rotation [1:0] $end
